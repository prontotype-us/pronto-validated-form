// Generated by CoffeeScript 1.12.6
var capIDs, capWords, capitalize, compactObj, humanize, mapObj, mapObjKey, pairs, slugify, toObj, unslugify;

pairs = function(o) {
  var a_, k, v;
  a_ = [];
  for (k in o) {
    v = o[k];
    a_.push([k, v]);
  }
  return a_;
};

toObj = function(a) {
  var i, k, len, o_, ref, v;
  o_ = {};
  for (i = 0, len = a.length; i < len; i++) {
    ref = a[i], k = ref[0], v = ref[1];
    o_[k] = v;
  }
  return o_;
};

mapObj = function(o, f) {
  var k, o_, v;
  o_ = {};
  for (k in o) {
    v = o[k];
    o_[k] = f(o[k]);
  }
  return o_;
};

mapObjKey = function(o, f) {
  var k, o_, v;
  o_ = {};
  for (k in o) {
    v = o[k];
    o_[k] = f(k);
  }
  return o_;
};

compactObj = function(o) {
  var k, o_, v;
  o_ = {};
  for (k in o) {
    v = o[k];
    if (v != null) {
      o_[k] = v;
    }
  }
  return o_;
};

capitalize = function(type) {
  return type[0].toUpperCase() + type.slice(1);
};

capWords = function(s) {
  return s.replace(/\b\w/g, function(m) {
    return m.toUpperCase();
  });
};

capIDs = function(s) {
  return s.replace(/\bid\b/, 'ID');
};

slugify = function(s) {
  return s.toLowerCase().replace(/\W+/g, '-');
};

unslugify = function(s) {
  return capWords(capIDs(s.replace(/[^a-z]+/g, ' ')));
};

humanize = function(s) {
  s = s.toLowerCase().replace(/[^a-z]+/g, ' ');
  s = s[0].toUpperCase() + s.substr(1);
  return s;
};

module.exports = {
  pairs: pairs,
  toObj: toObj,
  mapObj: mapObj,
  mapObjKey: mapObjKey,
  compactObj: compactObj,
  capitalize: capitalize,
  capWords: capWords,
  capIDs: capIDs,
  slugify: slugify,
  unslugify: unslugify,
  humanize: humanize
};
